#!/usr/bin/python

#################################################################################################
# Title:   Namechooser3000.py
# Description:
#  This script is made to select a random winner of the Oslo site Julekalender.
#  The random number is generated by measuring the quantum mechanical effects on photons travelling through a vacuum.
#  More detail on the physics here: qrng.anu.edu.au
#################################################################################################

import sys
import time
import json
import itertools
import threading
import subprocess
#import cec
import cmd
import tty, termios
import RPi.GPIO as GPIO
from urllib import urlencode
from urllib2 import urlopen

# Only as backup due to unstable wifi-connection
import random

choose_name_button_pin = 37
save_name_button_pin = 36
URL = 'https://qrng.anu.edu.au/API/jsonI.php'



GPIO.setmode(GPIO.BOARD)
GPIO.setup(choose_name_button_pin, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(save_name_button_pin, GPIO.IN, pull_up_down=GPIO.PUD_UP)

keep_spinning = True
finished = False
#BbuttonPressed = False
#def keyPressEventHandler(event, *args):
#    global buttonPressed
#    buttonPressed = True
#    print("Event: "+event+ " Args: "+ args)
numbers = []

def spin_bar():
    spinner = itertools.cycle(['-', '\\', '|', '/'])
    while keep_spinning:
        sys.stdout.write(next(spinner))
        sys.stdout.flush()
        time.sleep(0.1)
        sys.stdout.write('\b')
    finished = True

def get_random_number():
    """Fetch data from the ANU Quantum Random Numbers JSON API"""
    global numbers
    if numbers:
        return numbers.pop()
    url = URL + '?' + urlencode({
        'type': 'uint16',
        'length': 30,
        'size': 1,
    })
    data = urlopen(url, timeout=5).read()
    data = json.loads(data)
    assert data['success'] is True
    numbers = data['data']
    return numbers.pop()

if __name__== "__main__":
#    cec.add_callback(keyPressEventHandler, 1)
#    cec.init()
#    cec.set_active_source()

    subprocess.call(['figlet', '-c', 'Namechooser\n3000'])
    with open('already_won_names.txt') as already_won_names:
        print("\nThis year's current winners:")
        for name in already_won_names:
            print(name)

    rnm = None
    while (True):
        while(GPIO.input(choose_name_button_pin)):
            if not GPIO.input(save_name_button_pin) and rnm is not None:
                with open('already_won_names.txt', 'a') as already_won_names:
                    already_won_names.write(names[rnm%len(names)]+'\n')
                print("Name saved!")
                time.sleep(0.5)
                rnm = None
            pass
        og_names = [line.rstrip() for line in open('names.txt')]
        names = og_names*3 # Three tickets per person

        with open('already_won_names.txt') as already_won_names:
            for name in already_won_names:
                try:
                    names.remove(name.rstrip())
                except ValueError:
                    pass
                
        keep_spinning = True
        sys.stdout.write("Splitting photon beam... ")

        t = threading.Thread(target=spin_bar)
        t.start()
        try:
            rnm = get_random_number()
        except Exception as e:
            sys.stdout.write("\rWifi Error; Using Pseudo-random fallback...  \n")
            time.sleep(0.6)
            rnm = random.randint(1,len(names))

        sys.stdout.write("\r    Randomizing names...   ")
        time.sleep(0.8)
        for name in og_names:
            sys.stdout.write("\r{:>23}...  ".format(name))
            time.sleep(0.1)
            
        keep_spinning = False
        
        print("\r                                    \n")
        subprocess.call(['figlet', '-c', names[rnm%len(names)].decode('utf-8').encode('latin-1')])

        # buttonPressed = False

        print("\n\n")